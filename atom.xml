<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>GobYang</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2016-12-24T08:43:17.484Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>GobYang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Github的SSH和HTTPS记住账号密码方法</title>
    <link href="http://yoursite.com/2015/12/24/Github%E7%9A%84SSH%E5%92%8CHTTPS%E8%AE%B0%E4%BD%8F%E8%B4%A6%E5%8F%B7%E5%AF%86%E7%A0%81%E6%96%B9%E6%B3%95/"/>
    <id>http://yoursite.com/2015/12/24/Github的SSH和HTTPS记住账号密码方法/</id>
    <published>2015-12-24T07:58:08.000Z</published>
    <updated>2016-12-24T08:43:17.484Z</updated>
    
    <content type="html"><![CDATA[<p>其实关于这两种认证方式也是适用于Gitlab等相关git.<br>很多时候，我们在打算克隆一个仓库到本地的时候，有两种方式可以选择，即：SSH和HTTPS.<br>克隆还好，但是需要推送的时候，也许会遇到权限，需要账号密码啊。</p>
<p><strong>通过HTTPS方式克隆的代码到本地</strong><br>如果遇到：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">error: The requested URL returned error: 403 Forbidden while accessing</div></pre></td></tr></table></figure></p>
<p>这是权限问题，可以修改.git/config文件追加用户名和密码，也可以直接敲下面命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git remote set-url origin https://youruser:password@github.com/user/repo.git</div></pre></td></tr></table></figure></p>
<a id="more"></a>
<p><strong>其实更常用的是SSH的方式来推送代码：</strong></p>
<p><strong>首先需要生成 SSH Keys，需要用到 ssh-keygen 命令。</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ssh-keygen -t rsa -C &quot;xxx@qq.com&quot; -f ~/.ssh/git-github</div></pre></td></tr></table></figure></p>
<p>简单介绍下参数含义：</p>
<p>-t 指定密钥类型，默认即 rsa ，可以省略<br>-C 设置注释文字，比如你的邮箱<br>-f 指定密钥文件存储文件名，会生成 git-github 和 git-github.pub 两个密钥文件</p>
<p>回车后，遇到提示输入 yes 即可，剩下一路回车，密钥文件就在指定路径下生成了。</p>
<p><strong>接下来就去git管理界面的设置里面将 SSH 公钥添加到 Github</strong><br>设置里面把git-github.pub公钥的内容复制进去添加就行了。</p>
<p><strong>本地添加SSH别名</strong><br>如果本机有其它密钥，连接 github 时可能不会自动使用刚生成的密钥，需要设置别名：</p>
<p>$ sudo vi ~/.ssh/config<br>加入类似的一段代码：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">host git-github</div><div class="line">	user git</div><div class="line">	hostname github.com</div><div class="line">	port 22</div><div class="line">	identityfile ~/.ssh/git-github</div></pre></td></tr></table></figure>
<p>保存退出。</p>
<p><strong>测试连接</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ssh -T git-github</div></pre></td></tr></table></figure></p>
<p>Hi xxx! You’ve successfully authenticated, but GitHub does not provide shell access.</p>
<p>表示设置的 SSH Keys 认证通过，但 Github 不提供 shell 访问。<br>此时就可以正常使用 Github 了。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;其实关于这两种认证方式也是适用于Gitlab等相关git.&lt;br&gt;很多时候，我们在打算克隆一个仓库到本地的时候，有两种方式可以选择，即：SSH和HTTPS.&lt;br&gt;克隆还好，但是需要推送的时候，也许会遇到权限，需要账号密码啊。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;通过HTTPS方式克隆的代码到本地&lt;/strong&gt;&lt;br&gt;如果遇到：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;error: The requested URL returned error: 403 Forbidden while accessing&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这是权限问题，可以修改.git/config文件追加用户名和密码，也可以直接敲下面命令：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;git remote set-url origin https://youruser:password@github.com/user/repo.git&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Git" scheme="http://yoursite.com/tags/Git/"/>
    
      <category term="GitHub" scheme="http://yoursite.com/tags/GitHub/"/>
    
  </entry>
  
  <entry>
    <title>linux学习笔记之vim</title>
    <link href="http://yoursite.com/2015/03/17/linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8Bvim/"/>
    <id>http://yoursite.com/2015/03/17/linux学习笔记之vim/</id>
    <published>2015-03-17T14:52:07.000Z</published>
    <updated>2016-12-24T13:31:11.782Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一、Vim常用操作"><a href="#一、Vim常用操作" class="headerlink" title="一、Vim常用操作"></a>一、Vim常用操作</h3><p>Vim是一个功能强大的全屏幕文本编辑器。是linux/unix上最常用的文本编辑器。它的作用是建立、编辑、显示文本文件。</p>
<p>Vim没有菜单，只有命令！</p>
<p>Vim三个工作模式：<br>            命令模式<br>            vi filename 进去命令模式 输入:wq保存退出</p>
<pre><code>插入模式
当你在命令模式的时候，输入插入命令 i a o就可以进入插入模式，进入插入模式的标志是下方出现了INSERT字样。按ESC退出。        

编辑模式
当你是命令模式的时候，按一个冒号 &apos;:&apos;就可以进入编辑模式。比如set number命令设置行号 设置完就回到命令模式
</code></pre><hr>
<a id="more"></a>
<pre><code>插入命令：
命令            作用
a            在光标所在字符后插入
A            在光标所在行尾插入
i            在光标所在字符前插入
I            在光标所在行行首插入
o            在光标下面插入新行
O            在光标上面插入新行
</code></pre><hr>
<pre><code>定位命令：
命令            作用
:set nu            设置行号
:set nonu        取消行号
gg            到第一行
G            到最后一行
nG            到第n行
:n            到第n行
$            移至行尾
0            移至行首
</code></pre><hr>
<pre><code>删除命令：
命令            作用
x            删除光标所在处字符
nx            删除光标所在处后n个字符
dd            删除光标所在行  ndd删除n行
dG            删除光标所在行到文件末尾内容
D            删除光标所在处到行尾内容
:n1,n2d            删除n1行到n2行指定范围的行
</code></pre><hr>
<pre><code>复制和剪切命令
命令            作用
yy            复制当前行
nyy            复制当前行以下n行
dd            剪切当前行
ndd            复制当前行以下n行
p或P            粘贴在当前光标所在行下或行上
</code></pre><hr>
<pre><code>替换和取消命令
命令            作用
r            取代光标所在处字符
R            从光标所在处开始替换字符，按Esc结束 【下方会出现replace字符】
u            取消上一步操作
</code></pre><hr>
<pre><code>搜索和搜索替换命令
命令            作用
/string            1:搜索指定的字符串 2：搜索时忽略大小写 :set ic
n            搜索指定字符串的下一个出现位置
:%s/old/new/g        全文替换指定字符串
:n1,n2s/old/new/g    在一定范围内替换指定字符串

:替换范围
%s 全文替换
起始行,终止行 s     /要替换的字符串/替换的新的字符串/g
                             c 询问确认
</code></pre><hr>
<pre><code>保存和退出命令
命令            作用
:w            保存修改
:W new_filename        另存为指定文件
:wq            保存修改并退出
ZZ            快捷键，保存修改并退出
:q!            不保存修改退出
:wq!            保存修改并退出（文件所有者及root可使用）
</code></pre><hr>
<h3 id="二、Vim常用技巧"><a href="#二、Vim常用技巧" class="headerlink" title="二、Vim常用技巧"></a>二、Vim常用技巧</h3><h5 id="–技巧1———————————————–"><a href="#–技巧1———————————————–" class="headerlink" title="–技巧1———————————————–"></a>–技巧1———————————————–</h5><pre><code>:r 文件名 ----把文件内容导入到刚刚光标所在的位置

:! 命令 -----可以执行命令
例如 :!which ls ----可以查看ls命令所在位置

可以把以上结合起来，可以把一个命令执行结果导入文件中 :r !命令
</code></pre><h5 id="–技巧2———————————————–"><a href="#–技巧2———————————————–" class="headerlink" title="–技巧2———————————————–"></a>–技巧2———————————————–</h5><pre><code>定义快捷键 :map 快捷键 触发命令

范例：    :map ^P I#&lt;ESC&gt; 定义快捷键位ctrl+P 触发的命令为 I跳到行首并进入插入模式，然后插入#号，然后进入到命令模式
    :map ^B 0x   定义快捷键ctrl+B 触发的命令为 0光标跳到行首并删除光标所在的字符 即可实现：删除注释

注意：快捷键一般跟ctrl结合起来 这里的^不是数字6那个 实际是ctrl+v 可以结合快捷键三个键一起按！
</code></pre><h5 id="–技巧3———————————————–"><a href="#–技巧3———————————————–" class="headerlink" title="–技巧3———————————————–"></a>–技巧3———————————————–</h5><pre><code>连续行注释

    :n1,n2s/^/#/g 连续多行注释
    :n1,n2s/^#//g 去掉连续多行的注释
    :n1,n2s/^/\/\//g 有些程序我们需要//注释的时候 可以连续多行这个命令
</code></pre><h5 id="–技巧4———————————————–"><a href="#–技巧4———————————————–" class="headerlink" title="–技巧4———————————————–"></a>–技巧4———————————————–</h5><pre><code>替换
:ab mymail 763191973@qq.com
在用vim编辑器执行 以上 当我们在插入模式 的时候 输入mymail的时候 一回车就会变成了763191973@qq.com
</code></pre><hr>
<p>注意!!!!：如果有定义的快捷键 ab在重启的时候 会发现都消失 如果你想永久有效 需要写在每个用户的宿主目录下面的家目录下面的配置文件里面。如果是root就在/root目录下面，如果是其他用户就在/home/xx下面。<br>文件.vimrc 可以存放一些编辑模式的命令 快捷键 ab</p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;一、Vim常用操作&quot;&gt;&lt;a href=&quot;#一、Vim常用操作&quot; class=&quot;headerlink&quot; title=&quot;一、Vim常用操作&quot;&gt;&lt;/a&gt;一、Vim常用操作&lt;/h3&gt;&lt;p&gt;Vim是一个功能强大的全屏幕文本编辑器。是linux/unix上最常用的文本编辑器。它的作用是建立、编辑、显示文本文件。&lt;/p&gt;
&lt;p&gt;Vim没有菜单，只有命令！&lt;/p&gt;
&lt;p&gt;Vim三个工作模式：&lt;br&gt;            命令模式&lt;br&gt;            vi filename 进去命令模式 输入:wq保存退出&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;插入模式
当你在命令模式的时候，输入插入命令 i a o就可以进入插入模式，进入插入模式的标志是下方出现了INSERT字样。按ESC退出。        

编辑模式
当你是命令模式的时候，按一个冒号 &amp;apos;:&amp;apos;就可以进入编辑模式。比如set number命令设置行号 设置完就回到命令模式
&lt;/code&gt;&lt;/pre&gt;&lt;hr&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
      <category term="VIM" scheme="http://yoursite.com/tags/VIM/"/>
    
  </entry>
  
  <entry>
    <title>JS如何判断一个页面是否已经打开?</title>
    <link href="http://yoursite.com/2015/01/23/JS%E5%A6%82%E4%BD%95%E5%88%A4%E6%96%AD%E4%B8%80%E4%B8%AA%E9%A1%B5%E9%9D%A2%E6%98%AF%E5%90%A6%E5%B7%B2%E7%BB%8F%E6%89%93%E5%BC%80/"/>
    <id>http://yoursite.com/2015/01/23/JS如何判断一个页面是否已经打开/</id>
    <published>2015-01-23T07:18:28.000Z</published>
    <updated>2016-12-24T09:18:49.352Z</updated>
    
    <content type="html"><![CDATA[<p>一种是刷新之后又会重新打开页面：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">&lt;!DOCTYPE html&gt;</div><div class="line">&lt;html&gt;</div><div class="line">&lt;head&gt;</div><div class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</div><div class="line">    &lt;title&gt;&lt;/title&gt;</div><div class="line">      &lt;script type=&quot;text/javascript&quot;&gt;</div><div class="line">        var objWin;</div><div class="line">        function openPage() &#123;</div><div class="line">            var target = &quot;http://www.baidu.com&quot;;</div><div class="line">              //判断是否打开</div><div class="line">            if (objWin == null || objWin.closed) &#123;</div><div class="line">                objWin = window.open(target);</div><div class="line">            &#125; else &#123;</div><div class="line">                objWin.location.replace(target);</div><div class="line">            &#125;</div><div class="line">            //objWin.focus();</div><div class="line">        &#125;     </div><div class="line">&lt;/script&gt;</div><div class="line">&lt;/head&gt;</div><div class="line">&lt;body&gt; </div><div class="line">    &lt;a href=&quot;javascript:openPage();&quot;&gt;打开页面&lt;/a&gt;</div><div class="line">  </div><div class="line">&lt;/body&gt;</div><div class="line">&lt;/html&gt;</div></pre></td></tr></table></figure></p>
<a id="more"></a>
<p>一种更完美一点的方案(刷新之后也不会再重新打开)：</p>
<p>index.html</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">&lt;!doctype html&gt;</div><div class="line">&lt;html&gt;</div><div class="line">&lt;head&gt;</div><div class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</div><div class="line">    &lt;title&gt;Document&lt;/title&gt;</div><div class="line">&lt;/head&gt;</div><div class="line">&lt;body&gt;</div><div class="line">&lt;input type=&quot;button&quot; value=&quot;open&quot; onclick=&quot;window.open(&apos;proxy.html&apos;,&apos;tag&apos;)&quot;&gt;</div><div class="line">&lt;/body&gt;</div><div class="line">&lt;/html&gt;</div></pre></td></tr></table></figure>
<p>proxy.html</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">&lt;!DOCTYPE html&gt;</div><div class="line">&lt;html&gt;</div><div class="line">&lt;head&gt;</div><div class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</div><div class="line">    &lt;title&gt;target页面&lt;/title&gt;</div><div class="line">    &lt;script&gt;</div><div class="line">        if(window.parent.name!=&quot;msg&quot;)</div><div class="line">        &#123;</div><div class="line">            window.location.href=&quot;target.html&quot;;//这才是你的显示页面</div><div class="line">        &#125;</div><div class="line">        else</div><div class="line">        &#123;</div><div class="line">            window.parent.focus();</div><div class="line">        &#125;</div><div class="line">    &lt;/script&gt;</div><div class="line">&lt;/head&gt;</div><div class="line">&lt;body&gt;</div><div class="line">proxy</div><div class="line">&lt;/body&gt;</div><div class="line">&lt;/html&gt;</div></pre></td></tr></table></figure>
<p>target.html</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">&lt;!DOCTYPE html&gt;</div><div class="line">&lt;html&gt;</div><div class="line">&lt;head&gt;</div><div class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</div><div class="line">    &lt;title&gt;&lt;/title&gt;</div><div class="line"></div><div class="line">&lt;/head&gt;</div><div class="line">&lt;body&gt;</div><div class="line">&lt;h3&gt;target页面&lt;/h3&gt;</div><div class="line">&lt;script&gt;</div><div class="line">    window.name=&quot;msg&quot;;</div><div class="line">&lt;/script&gt;</div><div class="line">message page</div><div class="line">&lt;iframe src=&quot;&quot; name=&quot;tag&quot; style=&quot;display:none&quot;&gt;&lt;/iframe&gt;</div><div class="line">&lt;/body&gt;</div><div class="line">&lt;/html&gt;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;一种是刷新之后又会重新打开页面：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;html&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;head&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;lt;meta charset=&amp;quot;UTF-8&amp;quot;&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;lt;title&amp;gt;&amp;lt;/title&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        var objWin;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        function openPage() &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            var target = &amp;quot;http://www.baidu.com&amp;quot;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;              //判断是否打开&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            if (objWin == null || objWin.closed) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                objWin = window.open(target);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &amp;#125; else &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                objWin.location.replace(target);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            //objWin.focus();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;     &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;/script&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;/head&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;body&amp;gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;lt;a href=&amp;quot;javascript:openPage();&amp;quot;&amp;gt;打开页面&amp;lt;/a&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;/body&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;/html&amp;gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Javascript" scheme="http://yoursite.com/tags/Javascript/"/>
    
  </entry>
  
  <entry>
    <title>linux学习笔记之常用命令之目录处理命令</title>
    <link href="http://yoursite.com/2014/03/18/linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E4%B9%8B%E7%9B%AE%E5%BD%95%E5%A4%84%E7%90%86%E5%91%BD%E4%BB%A4/"/>
    <id>http://yoursite.com/2014/03/18/linux学习笔记之常用命令之目录处理命令/</id>
    <published>2014-03-18T10:35:29.000Z</published>
    <updated>2016-12-24T14:21:38.148Z</updated>
    
    <content type="html"><![CDATA[<p><strong>————————常用命令—————</strong></p>
<pre><code>1文件处理命令
 1.1命令格式与目录处理命令
 1.2目录处理命令
 1.3文件处理命令
 1.4链接命令
2权限管理命令
3文件搜索命令
4帮助命令
5用户管理命令
6压缩解压命令
7网络命令
8关机重启命令
</code></pre><h3 id="1、文件处理命令"><a href="#1、文件处理命令" class="headerlink" title="1、文件处理命令"></a>1、文件处理命令</h3><p>1.1 命令格式：命令 [-选项][参数]   方括号是可选的</p>
<pre><code>例：ls -la /etc
</code></pre><p>说明：<br>    1、个别命令使用不遵循此格式<br>    2、当有多个选项时，可以写在一起 -l a—&gt;-la<br>    3、简化选项与完整选项 -a等于–all linux简化的习惯一个-  完整的得用两个–</p>
<h3 id="1-2-目录处理命令："><a href="#1-2-目录处理命令：" class="headerlink" title="1.2 目录处理命令："></a>1.2 目录处理命令：</h3><p><code>ls</code></p>
<p>英文原意：list<br>命令所在路径：/bin/ls<br>执行权限：所有用户<br>功能描述：显示目录文件</p>
<p>语法：ls 选项[-ald][文件或目录]</p>
<pre><code>      -a 显示所有文件，包括隐藏文件 [all]
      -l 详细信息显示 [long]  
      -h 人性化显示把文件大小显示为KB MB [human]
      -d 查看目录属性 [directory]
      -i 查看文件的i节点,可以理解为系统会给每个文件一个ID号 [inode]

任何一个文件的详细信息：
-rw-r--r--
文件类型：- 二进制文件   d 目录[directory]     l 软链接文件[link]
rw- r-- r--
u   g   o 
u所有者 g所有组 o其他人 (在上面rw-三个一组)
r读 w写 x执行
</code></pre><hr>
<p><code>mkdir</code></p>
<p>英文原意：make directories<br>命令所在路径：/bin/mkdir<br>执行权限：所有用户<br>语法：mkdir-p[目录名]<br>功能描述：创建根目录 -p递归创建</p>
<pre><code>范例：mkdir -p /tmp/Japan/boduo
      mkdir /tmp/Japan/longze/tmp/Japan/canjing 这个会报错 应该如果不-p递归 你在一个本来不存在的目录里面再去创建目录 肯定是不行的
</code></pre><hr>
<p><code>cd</code></p>
<p>英文原意：change directory;<br>命令所在路径：shell内置命令；<br>执行权限：所有用户；<br>语法：cd[目录]；<br>功能描述：切换目录</p>
<pre><code>范例：cd /tem/Japan/boduo切换到指定目录
     cd .. 回到上一级目录
</code></pre><hr>
<p><code>rmdir</code></p>
<p>英文原意：remove empty directories<br>命令所在路径：/bin/rmdir<br>执行权限：所有用户<br>语法：rmdir[目录名]<br>功能描述：删除空目录</p>
<pre><code>如果不为空得用rm -r xxx
范例：rmdir /tmp/Japan/boduo
</code></pre><hr>
<p><code>cp</code></p>
<p>英文原意：copy ; 命令所在路径：/bin/cp ；执行权限：所有用户;<br>语法：cp -rp [原文件或目录][目标目录]<br>         -r  复制目录<br>         -p 保留文件属性<br>功能描述：复制文件或目录(可以同时复制多个文件或目录 只要指定目标位置)</p>
<pre><code>例子：mv -r /tmp/Japan /root/riben 把tmp目录下面的Japan复制到root目录下面并且更改名字为riben
</code></pre><hr>
<p><code>mv</code></p>
<p>英文原意：move<br>命令所在路径:/bin/mv<br>执行权限：所有用户；<br>语法：mv[原文件或目录][目标目录]<br>功能描述:剪切文件或改名<br>    例子：mv /tmp/Japan /root/riben 把tmp目录下面的Japan剪切到root目录下面并且更改名字为riben<br>    改名:<br>    cd /root<br>    mv Japan riben 如果在当前目录下面mv不就是在改名么！ </p>
<hr>
<p><code>rm</code><br>英文原意：remove<br>命令所在路径:/bin/rm<br>执行权限：所有用户<br>语法：rm -rf[文件或目录]<br>         -r 删除目录<br>         -f 强制执行<br>功能描述:删除文件<br>    rm grub.config</p>
<hr>
<h3 id="1-3-文件处理命令"><a href="#1-3-文件处理命令" class="headerlink" title="1.3 文件处理命令"></a>1.3 文件处理命令</h3><hr>
<p><code>touch</code><br>命令所在路径:/bin/touch<br>执行权限：所有用户<br>语法：touch[文件名]<br>功能描述：创建空文件</p>
<pre><code>范例：touch Japanlovestory.list //在当前路径下面创建文件
      touch /root/Japanlovestory.list  //如果加了完整路径则在root路径下面创建一个空文件
linux中并不像window中对特殊符号不允许 但是建议在Linux中也别用
另外注意空格：
      touch program files  因为在window中可以在文件命名的时候 中间去敲一个空格 但是注意！！这条命令会创建两个文件 program files
如果真的需要创建一个“program files”的文件，可以用引号引起来
      touch &quot;program files&quot;
虽然可以敲一个空白符 但是并不建议这么做，因为在以后查找的时候 会产生很多麻烦 
</code></pre><hr>
<p><code>cat</code><br>命令所在路径：/bin/cat<br>执行权限：所有用户<br>语法：cat[文件名]<br>功能描述：显示文件内容<br>  -n显示行号</p>
<pre><code>范例：cat /etc/issue
     cat -n /etc/services
</code></pre><p>此命令并适合浏览很长很长的文件！要用more</p>
<hr>
<p><code>tac</code><br>命令所在路径：/usr/bin/tac<br>执行权限：所有用户<br>语法：tac [文件名]<br>功能描述：显示文件内容（反向列示）—反过来倒着显示 但是并不支持显示行号</p>
<pre><code>范例：tac /etc/services
</code></pre><hr>
<p><code>more</code><br>命令所在路径：/bin/more<br>执行权限：所有用户<br>语法：more [文件名]<br>      空格或者f  翻页<br>      enter      换行<br>      q或Q       退出<br>功能描述：分页显示文件内容<br>    范例：more /etc/services<br>不足：只可以按往下面翻页 不能往上面翻页 所以得用：less</p>
<hr>
<p><code>less</code><br>命令所在路径：/usr/bin/less<br>执行权限：所有用户<br>    语法：less [文件名]<br>          pageup向上翻页<br>          空格或者f  翻页<br>          enter      换行<br>          向上方向箭头 上面一行<br>          q或Q       退出<br>          /xxx    搜索关键词xxx  n向下切换搜索的结果所在位置[next]<br>功能描述：分页显示文件内容（可向上翻页 并且可以查找）</p>
<pre><code>范例：less /etc/services
</code></pre><hr>
<p><code>head</code><br>命令所在路径：/usr/bin/head<br>执行权限：所有用户<br>语法：head [文件名]<br>功能描述：显示文件前面几行<br>              -n指定行数<br>    范例：head -n 20 /etc/services<br>如果你不指定行号，会默认显示10行。</p>
<hr>
<p><code>tail</code><br>命令所在路径：/usr/bin/tail<br>执行权限：所有用户<br>语法：tail [文件名]<br>功能描述：显示文件后面几行<br>              -n指定行数<br>       -f动态显示文件末尾内容 常用来监控日志 因为它会动态显示<br>    范例：tail -n 18 /etc/services<br>如果你不指定行号，会默认显示10行。</p>
<hr>
<h3 id="1-4链接命令"><a href="#1-4链接命令" class="headerlink" title="1.4链接命令"></a>1.4链接命令</h3><hr>
<p><code>ln</code><br>英文原意：link<br>命令所在路径：/bin/ln<br>执行权限：所有用户<br>    语法：ln -s [原文件][目标文件]<br>             -s 创建软链接<br>功能描述：生成链接文件</p>
<pre><code>范例：ln -s /etc/issue /tmp/issue.soft
      创建文件/etc/issue的软链接/tmp/issue.soft

      ln /etc/issue /tmp/issue.hard
      创建文件/etc/issue的硬链接/tmp/issue.hard  硬链接没有 -s选项
</code></pre><p>软链接特征：类似windows快捷方式</p>
<pre><code>1：lrwxrwxrwx l开头表示文件类型为软链接 软链接所有用户的文件权限均为可读可写可执行
2：文件大小 当我们创建一个软链接的时候 跟原文件相比 大小相比原文件小很多，因为它只是一个符号链接
3：/tmp/issue.soft -&gt; /etc/issue 箭头指向源文件

什么时候用软链接即什么时候在window中用快捷方式
</code></pre><p>硬链接特征：</p>
<pre><code>1：拷贝 cp-p + 同步更新
echo &quot;www.thaibl.com&quot; &gt;&gt; /etc/issue
(相当于拷贝并保留原文件属性（最后修改时间，大小，内容）外加同步更新,就算一个文件删除了，另外一个依然存在)
2：通过i节点识别。 当给某个文件创建一个硬链接的时候 我们会发现硬链接文件的节点跟原文件的节点一样。[所以才会实时更新][ls -i]
3：不能跨分区 比如不能把都在 /tmp目录下面的文件 创建到/bin目录下面去 而软链接没有这个限制
4：不能针对目录使用[不能跟某个目录创建硬链接，而软链接没有这个限制]
</code></pre><hr>
<h3 id="2、权限管理命令"><a href="#2、权限管理命令" class="headerlink" title="2、权限管理命令"></a>2、权限管理命令</h3><hr>
<p>代表字符 权限 对文件的含义 对目录的含义</p>
<p>r 读权限 可以查看文件的内容 可以列出目录中的内容</p>
<p>w 写权限 可以修改文件内容 可以在目录中创建删除文件</p>
<p>x 执行权限 可以执行文件 可以进入目录</p>
<hr>
<p>注意：对所属用户来说 一个文件是否有删除权限，要看文件所在的目录是否有写权限<br>假如我们在 root下面创建一个temp目录 然后touch /temp/testfile 然后chmod 777 /temp 再去创建useradd qingwa passwd qingwa 创建一个普通用户qingwa之后再去登录，执行rw /temp/testfile 由于我们设置了temp目录对普通用户来说也是有写的权限，所以能删除！！</p>
<hr>
<p><code>chmod</code><br>命令英文原意：change the permissions mode of a file<br>命令所在路径：/bin/chmode<br>执行权限：所有用户</p>
<pre><code>语法：
一、chmod [{ugoa}{+-=}{rwx}][文件或目录]   

          //u所有者 g所有组 o其他人 +增加权限 -减少权限 =不管你之前有什么权限，现在必须是这个权限 rwx可读可写可执行

    例子：chmod u+x /tmp/test.html 即给test.html 所有者增加x可执行的权限
          chmod g+x,o-r /tmp/text/html 可以给多个用户修改多个权限，用逗号隔开就行了

  二、[mode=421][文件或目录]   -------通常用这个

      //权限的数字表示,r--4 w---2  x---1
      rwxrw-r--
      7  6  4
例子：假如我们想要这个权限640 rw-r----- 可以这样：chmod 640 /tmp/test.html

  三、-R 递归修改

  假如在tmp/a/b
  thmod -R 777 /tmp/a
  因为是递归修改 我们ls -lh的时候会发现b目录的权限也会被递归修改为777
</code></pre><p>功能描述：改变文件或目录权限</p>
<hr>
<p><code>chown</code><br>命令英文原意：change file ownership<br>命令所在路径：/bin/chown<br>执行权限：所有用户<br>语法：chown[用户][文件或目录]<br>功能描述：改变文件或目录的所有者</p>
<pre><code>范例：chown qingwa yang  //改变文件qingwa的所有者为yang
</code></pre><hr>
<p><code>chgrp</code><br>命令英文原意：change file group ownership<br>命令所在路径：/bin/chgrp<br>执行权限：所有用户<br>语法：chgrp[用户组][文件或目录]<br>功能描述：改变文件或目录的所属组<br>    范例：chgrp lampbrother fengjie //改变文件fengjie的所属组为lampbrother </p>
<p>[groupadd 添加用户组]</p>
<hr>
<p><code>umask</code><br>英文原意:the user file-creation mask<br>命令所在路径:Shell内置命令<br>执行权限：所有用户<br>语法：umask [-S]<br>      -S 以rwx形式显示新建文件缺省权限<br>功能描述：显示、设置文件的缺省权限<br><code>范例：umask -S</code><br>注意：linux中创建一个新文件默认是rw-r–r–出于安全考虑是不让新建的文件有可执行的权限644<br>假如我想修改默认新建文件的权限，就是以后创建的新文件的权限为rwxr-xr– 754<br>需要这么做：777-754=023<br>umask 023<br>以后新建的文件的权限就是：rwxr-xr– 754</p>
<hr>
<h3 id="3、文件搜索命令"><a href="#3、文件搜索命令" class="headerlink" title="3、文件搜索命令"></a>3、文件搜索命令</h3><hr>
<p>在linux中，最重要的事情不是搜索你能找得到文件，而是应该规划好目录结构，放好位置，因为搜索会很占用系统资源，如果在服务器访问高发期间，小心崩溃。</p>
<hr>
<p><code>find</code><br>命令所在路径：/bin/find<br>执行权限：所有用户<br>语法：find [搜索范围][匹配条件]<br>功能描述：文件搜索</p>
<pre><code>A：find /etc -name init  在目录/etc中查找文件名为 init  [-iname不区分大小写]
B：find /etc -size +204800 在目录/etc下查找大于100M的文件  +n 大于 -n小于  n等于  
注意：在linux中得换算为数据块 1数据块等于512字节即0.5k--100M=102400kb=204800kb
C：find / -user qingwa 在根目录下面查找所有者为qingwa的文件
       -group根据所属组查找
D：find /etc -cmin -5 在/etc下查找5分钟内被修改过属性的文件和目录
             -amin 访问时间[access]
      -cmin 文件属性[change]
      -mmin 文件内容[modify]
    +xx表示超过时间 -xx表示多少时间以内
E：find /etc -size +163840 -a -size -204800 在/etc下查找大于80MB小于100MB的文件
   -a两个条件同时满足 [and]
   -o两个条件满足任意一个即可
F：find /etc -name inittab -exec ls -l {}\; 在/etc下查找inittab文件并显示其详细信息
   -exec/ok 命令 {}\; 对搜索结果执行操作
G：-type根据文件类型查找 f文件 d目录 l软链接文件
H: 根据i节点查找
   find . -inum 31531 -exec rm {}\;查找节点为31531的文件并立即执行删除命令
</code></pre><hr>
<p><code>locate</code><br>命令所在路径：/usr/bin/locate<br>执行权限：所有用户<br>语法：locate 文件名<br>功能描述：在文件资料库中查找文件<br>    范例：locate inittab</p>
<pre><code>-i 选项不区分大小写

注意1：locate搜索速度很快 相当于window那个everything那个软件。原因是：用locate locate 会得到很多行信息，系统会定期把信息存放到mlocate.db文件里，不像find会在某个分区某个文件去查找，只需要搜索mlocate.db这个文件就行了。
但是有一个问题，新建的文件实际上是没有被收录到这个文件里的，所以用locate去查找的时候，是查找不了的。解决办法：执行下update命令 回去更新这个文件资料库，再去查找就会找到了。
注意2：locate是无法找到临时目录下面的文件的 比如/tmp
</code></pre><hr>
<p><code>which</code><br>命令所在路径：/usr/bin/which<br>执行权限：所有用户<br>语法：which命令<br>功能描述：搜索命令所在目录及别名信息<br>    范例：which ls</p>
<hr>
<pre><code>whereis
</code></pre><p>命令所在路径：/usr/bin/whereis<br>执行权限：所有用户<br>语法：whereis [命令名称]<br>功能描述：搜索命令所在目录及帮助文档路径<br>    范例：whereis ls</p>
<hr>
<p><code>grep</code><br>命令所在路径：/bin/grep<br>执行权限：所有用户<br>语法：grep -iv[指定字串][文件]<br>功能描述：在文件中搜寻字串匹配的行并输出<br> -i 不区分大小写<br> -v 排除指定字串<br>    范例:grep -i mysql /root/install.log 在/root/install.log文件中不区分大小写的查找mysql<br>         grep -v ^# /etc.initab排除以#开头的行的字符串</p>
<hr>
<h3 id="4、帮助命令"><a href="#4、帮助命令" class="headerlink" title="4、帮助命令"></a>4、帮助命令</h3><hr>
<p><code>man</code><br>英文原意：manual<br>命令所在路径：/usr/bin/man<br>执行权限：所在用户<br>语法：man[命令或配置文件]<br>功能描述：获得帮助信息<br>    范例：man ls<br>          查看ls命令的帮助信息<br>          man services<br>          查看配置文件services的帮助信息<br>          man 5 passwd 查看用户信息</p>
<pre><code>Linux中,执行man命令查询帮助文档时,是以vi形式打开帮助文档,所以退出时应该键入:q命令
</code></pre><hr>
<p><code>whatis</code> 命令<br>查看到命令简短的介绍信息[该命令是干什么的]</p>
<hr>
<p><code>apropos</code> 配置文件的名称<br>查看配置文件的简短信息</p>
<hr>
<p>技巧：<br><strong>命令 –help</strong> 会把该命令常见的选项列出来<br>    touch –help</p>
<hr>
<p><code>info</code> 跟 man差不多也是显示帮助信息</p>
<hr>
<p><code>help</code><br>命令所在路径：Shell内置命令<br>执行权限：所有用户<br>语法：help命令<br>功能描述：获得Shell内置命令的帮助信息<br>范例：help umask   查看umask命令的帮助信息</p>
<p>用which找不到的命令都是Shell内置命令</p>
<hr>
<h3 id="5、用户管理命令"><a href="#5、用户管理命令" class="headerlink" title="5、用户管理命令"></a>5、用户管理命令</h3><hr>
<p><code>useradd</code></p>
<p>命令所在路径：/usr/sbin/useradd<br>执行权限：root<br>语法：useradd用户名<br>功能描述：添加新用户<br>    范例：useradd qingwa</p>
<hr>
<p><code>passwd</code><br>命令所在路径：/usr/bin/passwd<br>执行权限：所有用户<br>语法：passwd用户名<br>功能描述：设置用户密码<br>    范例 passwd amdin888</p>
<p>普通用户只能更改自己的密码 而root可以更改所有用户的密码</p>
<hr>
<p><code>who</code><br>命令所在路径：/usr/bin/who<br>执行权限：所有用户<br>语法：who<br>功能描述：查看登录用户信息<br>    范例：who </p>
<p>显示规则：<br>登录用户名  登录终端  tty本地终端  pts表示远程终端（用不同的数字，终端号来区分不同的登录终端） 登录时间（什么时候登录的）</p>
<hr>
<p><code>w</code><br>命令所在路径：/usr/bin/w<br>执行权限：所有用户<br>语法：w<br>功能描述：查看登录用户详细信息</p>
<pre><code>范例：w

up linux连续运行多少时间了([uptime命令也行]) ；
load average负载均衡的三个值 ；
IDLE表示用户登录过来空闲了多久了 ；
JCPU当前用户登录过来累计的占用时间；
PCPU表示当前登录过来用户当前操作占用的时间 ；
WHAT表示当前执行的什么操作、命令
</code></pre><hr>
<h3 id="6、压缩解压命令"><a href="#6、压缩解压命令" class="headerlink" title="6、压缩解压命令"></a>6、压缩解压命令</h3><hr>
<p>.gz(window中很少)<br>.zip（linux window中都有）<br>.rar(在linux中在需要装一个rar for linux的解压软件)</p>
<hr>
<p><code>gzip</code><br>命令所在路径：/bin/gzip<br>执行权限：所有用户<br>语法：gzip [文件]<br>功能描述：压缩文件 注意：跟window是不一样的，只能压缩文件，不能压缩目录，而且压缩完不保留原文件 只剩压缩包了<br>压缩后文件的格式：.gz</p>
<hr>
<p><code>gunzip</code><br>命令英文原意：GUNunzip<br>命令所在路径：/bin/gunzip<br>执行权限：所有用户<br>语法：gunzip[压缩文件]<br>功能描述：解压.gz的压缩文件</p>
<pre><code>范例：gunzip buduo.gz
</code></pre><hr>
<p><code>tar</code>压缩<br>命令所在路径：/bin/tar<br>执行权限：所有用户<br>    语法：tar 选项[-zcf][压缩后文件名][目录]<br>       -c打包 ！！！<br>       -v显示详细信息<br>       -f指定文件名<br>       -z打包同时压缩<br>功能描述：打包目录<br>压缩后文件格式：.tar.gz<br>    例子：tar -cvf Japan.tar.gz Japan  把Japan这个目录压缩成Japan.tar</p>
<pre><code>tar解压
 -x解包 !!!!
 -v显示详细信息
 -f指定解压软件
 -z解压缩
范例：tar -zxvf Japan.tar.gz
</code></pre><hr>
<p><code>zip</code><br>命令所在路径：/usr/bin/zip<br>执行权限：所有用户<br>语法：<br>zip 选项[-r] [压缩后文件名] [文件或目录]<br>    -r 压缩目录<br>功能描述：压缩文件或目录<br>压缩后文件格式：.zip</p>
<p>压缩原文件仍未保留 还会显示压缩比 但是压缩比并没有 gzip tar 那么强</p>
<p>解压：unzip [压缩文件]</p>
<hr>
<p><code>bzip2</code><br>命令所在路径：/usr/bin/bzip2<br>执行权限：所有用户<br>语法：bzip2 选项 [-k][文件]<br>      -k 产生压缩文件后保留原文件<br>功能描述：压缩文件<br>压缩文件格式：.bz2<br>    范例：bzip2 -k boduo<br>          tar -cjf Japan.tar.bz2 Japan  把-z换成-j就可以利用tar压缩成.tar.bz2格式</p>
<p>这个压缩格式比率惊人。</p>
<hr>
<p><code>bunzip2</code><br>命令所在路径：/usr/bin/bunzip2<br>执行权限：所有用户<br>语法：bunzip2 选项[-k][压缩文件]<br>      -k解压后保留原文件<br>功能描述：解压<br>    范例：bunzip2 -k boduo.bz2<br>          tar -xjf Japan.tar.bz2</p>
<hr>
<h3 id="7、网络命令"><a href="#7、网络命令" class="headerlink" title="7、网络命令"></a>7、网络命令</h3><hr>
<p><code>write</code><br>指令所在路径：/usr/bin/write<br>执行权限：所有用户<br>语法：write &lt;用户名&gt;<br>功能描述：给在线用户发信息（w可以看到哪些用户在线）,ctrl+D保存结束<br>    范例：# write linzhiling<br>    xxxxxxxxxxxxx<br>    ctrl+D保存结束</p>
<hr>
<p><code>wall</code><br>命令英文原意：write all<br>命令所在路径：/usr/bin/wall<br>执行权限：所有用户<br>语法：wall [message]<br>功能描述：发广播信息(给所有在线用户)<br>    范例：# wall qingwa is a animal</p>
<hr>
<p><code>ping</code><br>命令所在路径：/bin/ping<br>执行权限：所有用户<br>语法：ping 选项 IP地址<br>      -c 指定发送次数<br>功能描述：测试网络连通性<br>    范例：# ping 192.168.88.99</p>
<p>ctrl+c结束</p>
<hr>
<p><code>ifconfig</code><br>命令英文原意：interface configure<br>命令所在路径：/sbin/ifconfig<br>执行权限：root<br>语法：ifconfig 网卡名称 IP地址<br>功能描述：查看和设置网卡信息<br>    范例：# ifconfig eth0 192.168.88.99</p>
<p><em>linux有两套网卡<br>eth0|eth1…本地真实的网卡，按照数字方式一次后推<br>lo 回环网卡，用来本机通信和测试的，地址也是固定的 都是127.0.0.1</em></p>
<hr>
<p><code>mail</code><br>命令所在路径：/bin/mail<br>执行权限：所有用户<br>语法：mail[用户名]<br>功能描述：查看发送电子邮件<br>    范例：mail root</p>
<p>这个就不像write命令 可以用户不在线  </p>
<p>ctrl+D保存结束</p>
<hr>
<p><code>last</code></p>
<p>命令所在路径：/usr/bin/last<br>执行权限：所有用户<br>语法：last<br>功能描述：列出目前与过去登入系统的用户信息<br>    范例：# last</p>
<p>[运用非常广泛]<br>这个命令非常有效常用的命令！！可以看 有什么其他用户登录了服务器.</p>
<p>如果有时候我们不想那么多信息，想看到用户最后一次登录的时间，可以用lastlog命令！！</p>
<hr>
<p><code>traceroute</code><br>命令所在路径：/bin/traceroute<br>执行权限：所有用户<br>语法：traceroute<br>功能描述：显示数据包到主机间的路径<br>    范例：traceroute www.thaibl.com<br>[运用非常广泛]</p>
<hr>
<p><code>netstat</code><br>命令所在路径：/bin/netstat<br>执行权限：所有用户<br>语法：netstat [选项]<br>功能描述：显示网络相关信息</p>
<pre><code>选项：
 -t:TCP协议 传输控制协议的简称【三次握手 安全】相当于A打电话B A你是？B你是？ AB要通话了 
 -u:UDP协议 用户数据报协议【快 不管你在不在线 直接甩给你】相当于发短信  不管你是谁、关机与否、可能被谁看到不管
 -l:监听
 -r:路由
 -n:显示IP地址和端口号
范例：
 # netstat -tlun 查看本机监听的端口
 # netstat -an 查看本机所有的网络连接
 # netstat -rn 查看本机路由表
</code></pre><p>[运用非常广泛，非常重要]</p>
<hr>
<p><code>setup</code><br>命令所在路径：/usr/bin/setup<br>执行权限：root<br>语法：setup<br>功能描述：配置网络<br>    范例：# setup</p>
<hr>
<p>挂载命令<br><code>mount</code><br>命令所在位置：/bin/mount<br>执行权限：所有用户<br>命令语法：mount [-t 文件系统] 设备文件名 挂载点<br>    范例： # mount -t iso9660 /dev/sr0/ /mnt/cdrom<br>             = mount /dev/sr0/ /mnt/cdrom </p>
<p>umount 设备文件名|挂载点<br>umount /dev/sr0 卸载光盘<br>需要跳到宿主目录去执行卸载命令</p>
<hr>
<h3 id="8、关机重启命令"><a href="#8、关机重启命令" class="headerlink" title="8、关机重启命令"></a>8、关机重启命令</h3><hr>
<p><code>shutdown</code></p>
<p>命令语法：shutdown [选项] 时间<br>    选项：-c 取消前一个关机命令<br>          -h 关机<br>          -r 重启</p>
<pre><code>eg：shutdown -h now 马上关机 shutdown -h 20:30 晚上八点关机
    shutdown -r now 马上重启
    shutdown -c 取消前一个关机命令
</code></pre><p>linux中还有其他重启关机命令，但是早期只有shutdown保存原来开启的服务 现在其他的也有了 但还是推荐这个老命令</p>
<p>提醒：<br>关机或重启之前必须先把服务停掉！这样才能保证用户不能碰触我，硬盘才会空闲下来，才会重启。</p>
<p>服务器不能关机 只能重启！！！</p>
<pre><code>其他关机命令：halt  
            poweroff 这个就不要用了 直接断电!!!
            init 0
其他重启命令：reboot
            init 6
</code></pre><hr>
<pre><code>系统运行级别：
0：关机
1：单用户（类似windows启动时按F8进入安全模式，其实就是启动最小的服务，其他多余附加的程序都不用，只启动核心的程序，用来做一些修复。只能root登录进去）
2：不完全多用户，不含NFS服务
3：完全多用户
4：未分配
5：图形界面
6：重启

cat /etc/inittab
#修改系统默认运行级别
id:3:initdefault:

`runlevel`
#查询系统运行级别 
</code></pre><hr>
<p>退出登录命令：<br><code>logout</code></p>
<hr>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;————————常用命令—————&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1文件处理命令
 1.1命令格式与目录处理命令
 1.2目录处理命令
 1.3文件处理命令
 1.4链接命令
2权限管理命令
3文件搜索命令
4帮助命令
5用户管理命令
6压
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
</feed>
