{"meta":{"title":"GobYang","subtitle":null,"description":"","author":"GobYang","url":"http://yoursite.com"},"pages":[{"title":"About","date":"2016-12-24T08:15:59.000Z","updated":"2016-12-24T08:45:15.073Z","comments":false,"path":"about/index.html","permalink":"http://yoursite.com/about/index.html","excerpt":"","text":"Hi,我是GobYang,是一个非科班的程序员，目前主要是PHP开发相关的工作。 工作中总是会遇到一些问题，有时候会各种搜索、填坑找到解决办法，然后复制或记录在记事本上面，久了多了都忘了，总感觉不实在，所以希望通过博客笔记形式加深印象记录在这里。 此博客是基于NodeJS的博客框架-Hexo构建而成,感谢开源大大们! 联系方式：社交：Weibo Email：me#thaidh.com Github：github"},{"title":"tags","date":"2016-12-24T08:03:07.000Z","updated":"2016-12-24T08:04:31.862Z","comments":false,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"Github的SSH和HTTPS记住账号密码方法","slug":"Github的SSH和HTTPS记住账号密码方法","date":"2015-12-24T07:58:08.000Z","updated":"2016-12-24T08:43:17.484Z","comments":true,"path":"2015/12/24/Github的SSH和HTTPS记住账号密码方法/","link":"","permalink":"http://yoursite.com/2015/12/24/Github的SSH和HTTPS记住账号密码方法/","excerpt":"其实关于这两种认证方式也是适用于Gitlab等相关git.很多时候，我们在打算克隆一个仓库到本地的时候，有两种方式可以选择，即：SSH和HTTPS.克隆还好，但是需要推送的时候，也许会遇到权限，需要账号密码啊。 通过HTTPS方式克隆的代码到本地如果遇到：1error: The requested URL returned error: 403 Forbidden while accessing 这是权限问题，可以修改.git/config文件追加用户名和密码，也可以直接敲下面命令：1git remote set-url origin https://youruser:password@github.com/user/repo.git","text":"其实关于这两种认证方式也是适用于Gitlab等相关git.很多时候，我们在打算克隆一个仓库到本地的时候，有两种方式可以选择，即：SSH和HTTPS.克隆还好，但是需要推送的时候，也许会遇到权限，需要账号密码啊。 通过HTTPS方式克隆的代码到本地如果遇到：1error: The requested URL returned error: 403 Forbidden while accessing 这是权限问题，可以修改.git/config文件追加用户名和密码，也可以直接敲下面命令：1git remote set-url origin https://youruser:password@github.com/user/repo.git 其实更常用的是SSH的方式来推送代码： 首先需要生成 SSH Keys，需要用到 ssh-keygen 命令。1ssh-keygen -t rsa -C &quot;xxx@qq.com&quot; -f ~/.ssh/git-github 简单介绍下参数含义： -t 指定密钥类型，默认即 rsa ，可以省略-C 设置注释文字，比如你的邮箱-f 指定密钥文件存储文件名，会生成 git-github 和 git-github.pub 两个密钥文件 回车后，遇到提示输入 yes 即可，剩下一路回车，密钥文件就在指定路径下生成了。 接下来就去git管理界面的设置里面将 SSH 公钥添加到 Github设置里面把git-github.pub公钥的内容复制进去添加就行了。 本地添加SSH别名如果本机有其它密钥，连接 github 时可能不会自动使用刚生成的密钥，需要设置别名： $ sudo vi ~/.ssh/config加入类似的一段代码： 12345host git-github user git hostname github.com port 22 identityfile ~/.ssh/git-github 保存退出。 测试连接1ssh -T git-github Hi xxx! You’ve successfully authenticated, but GitHub does not provide shell access. 表示设置的 SSH Keys 认证通过，但 Github 不提供 shell 访问。此时就可以正常使用 Github 了。","categories":[],"tags":[{"name":"Git","slug":"Git","permalink":"http://yoursite.com/tags/Git/"},{"name":"GitHub","slug":"GitHub","permalink":"http://yoursite.com/tags/GitHub/"}]},{"title":"JS如何判断一个页面是否已经打开?","slug":"JS如何判断一个页面是否已经打开","date":"2015-01-23T07:18:28.000Z","updated":"2016-12-24T09:18:49.352Z","comments":true,"path":"2015/01/23/JS如何判断一个页面是否已经打开/","link":"","permalink":"http://yoursite.com/2015/01/23/JS如何判断一个页面是否已经打开/","excerpt":"一种是刷新之后又会重新打开页面：12345678910111213141516171819202122232425&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;&lt;/title&gt; &lt;script type=&quot;text/javascript&quot;&gt; var objWin; function openPage() &#123; var target = &quot;http://www.baidu.com&quot;; //判断是否打开 if (objWin == null || objWin.closed) &#123; objWin = window.open(target); &#125; else &#123; objWin.location.replace(target); &#125; //objWin.focus(); &#125; &lt;/script&gt;&lt;/head&gt;&lt;body&gt; &lt;a href=&quot;javascript:openPage();&quot;&gt;打开页面&lt;/a&gt; &lt;/body&gt;&lt;/html&gt;","text":"一种是刷新之后又会重新打开页面：12345678910111213141516171819202122232425&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;&lt;/title&gt; &lt;script type=&quot;text/javascript&quot;&gt; var objWin; function openPage() &#123; var target = &quot;http://www.baidu.com&quot;; //判断是否打开 if (objWin == null || objWin.closed) &#123; objWin = window.open(target); &#125; else &#123; objWin.location.replace(target); &#125; //objWin.focus(); &#125; &lt;/script&gt;&lt;/head&gt;&lt;body&gt; &lt;a href=&quot;javascript:openPage();&quot;&gt;打开页面&lt;/a&gt; &lt;/body&gt;&lt;/html&gt; 一种更完美一点的方案(刷新之后也不会再重新打开)： index.html 12345678910&lt;!doctype html&gt;&lt;html&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;Document&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;input type=&quot;button&quot; value=&quot;open&quot; onclick=&quot;window.open(&apos;proxy.html&apos;,&apos;tag&apos;)&quot;&gt;&lt;/body&gt;&lt;/html&gt; proxy.html 1234567891011121314151617181920&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;target页面&lt;/title&gt; &lt;script&gt; if(window.parent.name!=&quot;msg&quot;) &#123; window.location.href=&quot;target.html&quot;;//这才是你的显示页面 &#125; else &#123; window.parent.focus(); &#125; &lt;/script&gt;&lt;/head&gt;&lt;body&gt;proxy&lt;/body&gt;&lt;/html&gt; target.html 1234567891011121314151617&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;h3&gt;target页面&lt;/h3&gt;&lt;script&gt; window.name=&quot;msg&quot;;&lt;/script&gt;message page&lt;iframe src=&quot;&quot; name=&quot;tag&quot; style=&quot;display:none&quot;&gt;&lt;/iframe&gt;&lt;/body&gt;&lt;/html&gt;","categories":[],"tags":[{"name":"Javascript","slug":"Javascript","permalink":"http://yoursite.com/tags/Javascript/"}]}]}